类UNIX系统  一切设备皆文件
文件记录数据

#打开文件  f=open("", )，open也可以打开一个带路径的文件
r w a .... r+ ...
关闭文件   f.close()
read()是一次性读完，用read读完之后再read就读不出来东西了
readlines() 可以读多行
readline() 只能读一行
读文件最稳妥的方式就是read(n),n表示一次性读入的数据量
写文件 write()

#文件定位
f.tell()  f.seek(offset,from)  offset:偏移量 from：0：表示文件开头 1：表示当前位置 2：表示文件末尾
先用f.seek()定位到读取数据的哪一点上，然后使用f.read()再读取数据。不过在seek（）函数中要注意，如果直接定位到文件末尾，offset
如果写正值，是接着想后读，在python2中写负值即可调整到向前读，但是在python3中已经取消这一条。
#文件的重命名和删除   基本都在os工具箱
import os  os.rename(old,new)    os.remove("文件名")  用程序删除就是彻底删除，不会进回收站
获取当前路径 os.getcwd()
修改当前所处的路径 os.chdir()  功能形同cd
获取当前下的目录列表  os.listdir()
删除文件夹   os.rmdir()

一般数据都是写入数据库，但是在这里演示写入文件，写入文件比较复杂的点在于，比如txt，write只支持str这样的写入，原数据需要转化成
str形式才能写入文件中，那么我们就直接转成str存入，读取的时候肯定更要装成字典，否则读出来字符串没有意义，使用eval命令，就可以
转成原先的数据格式，再进行存储。

不管是可变还是不可变数据类型，只要在函数中写了g_a=[200]这样的字符，有等于号的，那么在局部变量中会重新生成一个新的变量，这是是需要的是加global的，
但是你写g_a.append()通过函数进行更改的时候，是可以更改的，不需要加global的
